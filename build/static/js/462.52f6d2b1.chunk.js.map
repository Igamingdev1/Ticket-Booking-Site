{"version":3,"file":"static/js/462.52f6d2b1.chunk.js","mappings":"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","sources":["components/Page.js","components/wrappers/GradientBorderWrapper.js","components/wrappers/PageBanner.js","pages/cart/Payment.js"],"sourcesContent":["import { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{`${title} | fanticket`}</title>\r\n            {meta}\r\n        </Helmet>\r\n\r\n        <div ref={ref} {...other}>\r\n            {children}\r\n        </div>\r\n    </>\r\n));\r\n\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node\r\n};\r\n\r\nexport default Page;\r\n","import styled from 'styled-components';\r\n\r\nconst GradientBorderStyleWrapper = styled.div`\r\n    border-radius: 16px;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    border: 1px;\r\n    border-style: solid;\r\n    border-color: transparent;\r\n\r\n    display: inline-flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    background: linear-gradient(#1c1c1c, #1c1c1c) padding-box, linear-gradient(to bottom, #828282, #323232) border-box;\r\n`;\r\n\r\nexport default function GradientBorderWrapper(props) {\r\n    return (\r\n        <GradientBorderStyleWrapper className={props?.className} >\r\n            <div\r\n                className={`w-full ${props?.isMessage && 'bg-primary/30'} rounded-xl ${props?.hoverEvent && 'hover:bg-primary/20'\r\n                    } `}\r\n                onClick={props?.onClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </GradientBorderStyleWrapper>\r\n    );\r\n}\r\n\r\nexport const Divider = ({ cls = '' }) => <div className={`divider overflow-hidden ${cls}`} style={{ height: 1 }} />;\r\n","import styled from 'styled-components';\r\n\r\nconst PageBannerBackground = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    position: relative;\r\n    &:before {\r\n        content: '';\r\n        background-image: linear-gradient(0deg, #1c1c1c 24.45%, rgba(28, 28, 28, 0) 84.89%),\r\n            ${(props) => props.cover || 'url(\"/images/background/main-banner-bg.jpg\")'};\r\n\r\n        z-index: -1;\r\n        position: absolute;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        -webkit-filter: grayscale(100%) blur(17.5px);\r\n        filter: grayscale(100%) blur(17.5px);\r\n        background-position: center;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport default function PageBanner(props) {\r\n    return (\r\n        <div className=\"w-full\">\r\n            <PageBannerBackground className=\"pt-40\">{props.children}</PageBannerBackground>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport axios from '../../utils/axios';\r\nimport { API_TICKET, WEBSOCKET_CONSTATNT } from '../../config';\r\nimport useLocales from '../../hooks/useLocales';\r\nimport useWebsocket from '../../hooks/useWebsocket';\r\n\r\nimport { dispatch, useSelector } from '../../redux/store';\r\nimport { setAvailableCart } from '../../redux/slices/cart';\r\n\r\nimport Page from '../../components/Page';\r\nimport PageBanner from '../../components/wrappers/PageBanner';\r\nimport GradientBorderWrapper from '../../components/wrappers/GradientBorderWrapper';\r\n\r\nexport default function Payment() {\r\n    const { t } = useLocales();\r\n    const navigate = useNavigate();\r\n    const { received, send } = useWebsocket();\r\n    const { cart } = useSelector((store) => store.cart);\r\n    const [method, setMethod] = useState('');\r\n    const [CVV, setCVV] = useState('');\r\n    const [CPF, setCPF] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [validity, setValidity] = useState('');\r\n    const [installments, setInstallments] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [processing, setProcessing] = useState(false);\r\n\r\n    const paymentOptions = [\r\n        { label: t(\"action.credit_debit_card\"), value: \"card\" }\r\n    ]\r\n\r\n    const onSubmit = (e) => {\r\n        if (!cart.length)\r\n            return;\r\n        e.preventDefault();\r\n        const card = {\r\n            CVV,\r\n            CPF,\r\n            firstName,\r\n            lastName,\r\n            number,\r\n            validity,\r\n            installments\r\n        };\r\n        const pixData = {\r\n            email,\r\n            CPF\r\n        }\r\n\r\n        const ticketIds = cart.map((item) => item._id);\r\n        setProcessing(true);\r\n        axios\r\n            .post(API_TICKET.buyTicket, { ticketIds, card, cart, pix: pixData, method })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    toast.success(res.data?.message);\r\n                }\r\n                if (res.status === 201) {\r\n                    toast.warning(res.data?.message || res.data?.data);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                dispatch(setAvailableCart([]));\r\n                setProcessing(false);\r\n                navigate('/ticket/billingaddress');\r\n            });\r\n    };\r\n\r\n    const getBack = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cart.length)\r\n            getBack();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (received && received?.command) {\r\n            const { command, id } = received;\r\n            if (command === WEBSOCKET_CONSTATNT.REMOVE_CART) {\r\n                const data = cart.filter((e) => e.ticketId !== id);\r\n                dispatch(setAvailableCart(data));\r\n                toast.warning(t(\"description.cart\"));\r\n                getBack();\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [received]);\r\n\r\n    return (\r\n        <Page title=\"Carrinho\">\r\n            <PageBanner>\r\n                <div className=\"container p-4 mb-8\">\r\n                    <div className=\"w-full justify-center flex flex-col mb-8 gap-2\">\r\n                        <h4 className=\"text-[64px]\">{t('title.payment')}</h4>\r\n                        <p className=\"w-1/2 text-stone-400\">{t('description.payment')}</p>\r\n                        <div className=\"mt-14 flex w-full gap-5\">\r\n                            <div className=\"flex flex-col gap-2 w-1/2 \">\r\n                                <p>\r\n                                    {t('title.payment')}\r\n                                </p>\r\n                                <GradientBorderWrapper>\r\n                                    <div className=\"relative\">\r\n                                        <div className=\"dropdown w-full\">\r\n                                            <div className=\"flex px-4 py-[21px] justify-between items-center cursor-pointer\" tabIndex={0}>\r\n                                                {method ? (\r\n                                                    <div className='flex gap-2 p-0 hover:bg-inherit'>\r\n                                                        <div className=\"w-6 h-6 rounded-full bg-slate-300\" />\r\n                                                        <p className=\"text-base text-stone-400\" >\r\n                                                            {paymentOptions.filter((option) => option.value === method)[0].label}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <p className=\"text-sm text-stone-400\">{t(\"label.select_payment_method\")}</p>\r\n                                                )}\r\n                                                <Icon icon=\"ic:outline-keyboard-arrow-down\" className='text-2xl' />\r\n                                            </div>\r\n                                            <ul className=\"dropdown-content menu shadow bg-base-200 rounded-xl w-full\">\r\n                                                <GradientBorderWrapper>\r\n                                                    <li className=\"p-4 border-b border-stone-600\">\r\n                                                        <p className=\"text-base text-primary p-0 hover:bg-inherit\">{t(\"label.select_payment_method\")}</p>\r\n                                                    </li>\r\n                                                    {paymentOptions.map((option, i) => (\r\n                                                        <li key={i}>\r\n                                                            <Link className={`p-4 flex flex-row justify-between bg-black border-stone-600 rounded-b-xl hover:bg-stone-800 ${i !== paymentOptions.length - 1 && \"border-b\"}`} onClick={() => setMethod(option.value)} >\r\n                                                                <div className='flex gap-2 p-0 hover:bg-inherit'>\r\n                                                                    <div className=\"w-6 h-6 rounded-full bg-slate-300\" />\r\n                                                                    <p className=\"text-base text-stone-400\" >\r\n                                                                        {option.label}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className='flex gap-3 p-0'>\r\n                                                                    <svg width=\"30\" height=\"19\" viewBox=\"0 0 30 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M10.938 1.98164H19.0449V16.5484H10.938V1.98164Z\" fill=\"#FF5F00\" />\r\n                                                                        <path d=\"M11.4527 9.26509C11.4527 6.30546 12.8425 3.68029 14.9785 1.98165C13.4087 0.746328 11.4271 0 9.26521 0C4.14349 0 0 4.14349 0 9.26509C0 14.3866 4.14349 18.5302 9.2651 18.5302C11.4269 18.5302 13.4086 17.7839 14.9785 16.5484C12.8425 14.8756 11.4527 12.2247 11.4527 9.26509Z\" fill=\"#EB001B\" />\r\n                                                                        <path d=\"M29.9824 9.26509C29.9824 14.3866 25.8389 18.5302 20.7173 18.5302C18.5555 18.5302 16.5738 17.7839 15.0039 16.5484C17.1658 14.8499 18.5298 12.2247 18.5298 9.26509C18.5298 6.30546 17.14 3.68029 15.0039 1.98165C16.5737 0.746328 18.5555 0 20.7173 0C25.8389 0 29.9825 4.16929 29.9825 9.26509H29.9824Z\" fill=\"#F79E1B\" />\r\n                                                                    </svg>\r\n\r\n                                                                    <svg width=\"59\" height=\"19\" viewBox=\"0 0 59 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M30.6759 6.07408C30.6428 8.72086 33.0011 10.1978 34.7776 11.076C36.6028 11.9769 37.2158 12.5547 37.2086 13.3605C37.195 14.5936 35.7527 15.1379 34.4031 15.159C32.0484 15.196 30.6793 14.5141 29.5909 13.9983L28.7426 18.0248C29.8347 18.5353 31.8567 18.9805 33.9536 19C38.8756 19 42.0958 16.5352 42.1132 12.7138C42.1325 7.8638 35.5003 7.59536 35.5456 5.42755C35.5613 4.77023 36.1795 4.06877 37.5344 3.89042C38.205 3.80032 40.0562 3.73137 42.1551 4.71185L42.9789 0.816145C41.8502 0.399223 40.3995 0 38.5933 0C33.9606 0 30.7022 2.49831 30.6759 6.07408ZM50.8945 0.33556C49.9958 0.33556 49.2384 0.867397 48.9003 1.68354L41.8694 18.7139H46.7879L47.7666 15.9699H53.7769L54.3446 18.7139H58.6797L54.8968 0.33556H50.8945ZM51.5826 5.30023L53.002 12.2015H49.1147L51.5826 5.30023ZM24.7125 0.335789L20.8356 18.7136H25.5225L29.3976 0.335329H24.7125M17.779 0.335329L12.9007 12.8446L10.9273 2.20848C10.6958 1.02116 9.78138 0.33556 8.76593 0.33556H0.791383L0.679688 0.869236C2.31683 1.22962 4.17691 1.81087 5.30383 2.4328C5.99348 2.81272 6.19014 3.14483 6.4167 4.04762L10.1543 18.7139H15.1072L22.7007 0.33556H17.779\" fill=\"#254AA5\" />\r\n                                                                    </svg>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </GradientBorderWrapper>\r\n                                            </ul>\r\n                                        </div>\r\n                                        {/* <select\r\n                                            value={method}\r\n                                            onChange={(e) => setMethod(e.target.value)}\r\n                                            className=\"appearance-none w-full bg-transparent p-3 focus:outline-none\"\r\n                                        >\r\n                                            <option value=\"\" className=\"text-stone-400\" disabled selected hidden>{t(\"label.select_payment_method\")}</option>\r\n                                            <option value=\"card\" className=\"bg-stone-600\">\r\n                                                Cartão de crédito ou débito\r\n                                            </option>\r\n                                            <option value=\"pix\" className=\"bg-stone-600\">\r\n                                                Pix\r\n                                            </option>\r\n                                        </select>\r\n                                        <div className=\"absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none\">\r\n                                            <svg className=\"fill-current h-4 w-4\" viewBox=\"0 0 20 20\">\r\n                                                <path d=\"M14.707 7.293a1 1 0 0 0-1.414 0L10 10.586l-3.293-3.293a1 1 0 1 0-1.414 1.414l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 0-1.414z\" />\r\n                                            </svg>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </GradientBorderWrapper>\r\n                                {!isSelected && (\r\n                                    <div className=\"flex gap-3 justify-end mt-6\">\r\n                                        <button\r\n                                            className=\"btn btn-primary btn-outline px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto\"\r\n                                            onClick={() => navigate('/cart')}\r\n                                        >\r\n                                            {t('action.back')}\r\n                                        </button>\r\n                                        <button\r\n                                            disabled={!method}\r\n                                            className=\"btn btn-primary px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto\"\r\n                                            onClick={() => setIsSelected(true)}\r\n                                        >\r\n                                            {t('action.continue')}\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                {isSelected && method === 'card' && (\r\n                                    <GradientBorderWrapper>\r\n                                        <form onSubmit={onSubmit}>\r\n                                            <div className=\"px-6 py-4\">\r\n                                                <h4 className=\"text-[28px]\">Cartão de Crédito</h4>\r\n                                                <div className=\"flex flex-col gap-4 mt-4\">\r\n                                                    <div className=\"gap-2 flex flex-col\">\r\n                                                        <p className=\"text-stone-400\">Nome como no cartão</p>\r\n                                                        {/* <div className='grid grid-cols-2 gap-4' > */}\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"name\"\r\n                                                                    className=\"input rounded-2xl\"\r\n                                                                    placeholder=\"Card Holder Name\"\r\n                                                                    value={firstName}\r\n                                                                    onChange={(e) => setFirstName(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                            {/* <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"name\"\r\n                                                                    className=\"input rounded-2xl\"\r\n                                                                    placeholder=\"Last name\"\r\n                                                                    value={lastName}\r\n                                                                    onChange={(e) => setLastName(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper> */}\r\n                                                        {/* </div> */}\r\n                                                    </div>\r\n                                                    <div className=\"gap-2 flex flex-col\">\r\n                                                        <p className=\"text-stone-400\">Número do cartão</p>\r\n                                                        <GradientBorderWrapper>\r\n                                                            <input\r\n                                                                name=\"number\"\r\n                                                                type=\"text\"\r\n                                                                maxLength={16}\r\n                                                                minLength={16}\r\n                                                                className=\"input w-full rounded-2xl\"\r\n                                                                placeholder=\"XXXXXXXXXXXXXXXX\"\r\n                                                                value={number}\r\n                                                                onChange={(e) => setNumber(e.target.value)}\r\n                                                                required\r\n                                                            />\r\n                                                        </GradientBorderWrapper>\r\n                                                    </div>\r\n                                                    <div className=\"flex gap-5\">\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <p className=\"text-stone-400\">Validade</p>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"validity\"\r\n                                                                    type=\"text\"\r\n                                                                    maxLength={7}\r\n                                                                    minLength={7}\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"XX\\XXXX\"\r\n                                                                    value={validity}\r\n                                                                    onChange={(e) => setValidity(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <div className=\"gap-2 flex \">\r\n                                                                <p className=\"text-stone-400\">CVV </p>\r\n                                                                <Icon\r\n                                                                    icon=\"mdi:information-variant-circle\"\r\n                                                                    className=\"text-primary w-6 h-6\"\r\n                                                                />\r\n                                                            </div>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"cvv\"\r\n                                                                    type=\"text\"\r\n                                                                    maxLength={3}\r\n                                                                    minLength={3}\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"XXX\"\r\n                                                                    value={CVV}\r\n                                                                    onChange={(e) => setCVV(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* <div className=\"flex gap-5\">\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <p className=\"text-stone-400\">Parcelas</p>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"installments\"\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"Selecione as parcelas\"\r\n                                                                    value={installments}\r\n                                                                    onChange={(e) => setInstallments(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <p className=\"text-stone-400\">CPF</p>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"cpf\"\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"XXX.XXX.XXX-XX\"\r\n                                                                    value={CPF}\r\n                                                                    onChange={(e) => setCPF(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                    <div className=\"flex gap-3 mt-4 justify-end\">\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-outline px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto\"\r\n                                                            onClick={() => {\r\n                                                                setIsSelected(false);\r\n                                                                setMethod('');\r\n                                                            }}\r\n                                                        >\r\n                                                            {t('action.back')}\r\n                                                        </button>\r\n                                                        <button\r\n                                                            className={`btn btn-primary px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto ${processing ? 'loading' : ''}`}\r\n                                                        >\r\n                                                            {t('action.continue')}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </GradientBorderWrapper>\r\n                                )}\r\n                                {isSelected && method === 'pix' && (\r\n                                    <GradientBorderWrapper>\r\n                                        <form onSubmit={onSubmit}>\r\n                                            <div className=\"px-6 py-4\">\r\n                                                <h4 className=\"text-[28px]\">Cartão de Crédito</h4>\r\n                                                <div className=\"flex flex-col gap-4 mt-4\">\r\n                                                    <div className=\"flex gap-5\">\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <p className=\"text-stone-400\">E-mail</p>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"email\"\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"iugu@gmail.com\"\r\n                                                                    value={email}\r\n                                                                    onChange={(e) => setEmail(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                        <div className=\"gap-2 flex flex-col w-full\">\r\n                                                            <p className=\"text-stone-400\">CPF</p>\r\n                                                            <GradientBorderWrapper>\r\n                                                                <input\r\n                                                                    name=\"cpf\"\r\n                                                                    className=\"input w-full rounded-2xl\"\r\n                                                                    placeholder=\"XXX.XXX.XXX-XX\"\r\n                                                                    value={CPF}\r\n                                                                    onChange={(e) => setCPF(e.target.value)}\r\n                                                                    required\r\n                                                                />\r\n                                                            </GradientBorderWrapper>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"flex gap-3 mt-4 justify-end\">\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-outline px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto\"\r\n                                                            onClick={() => {\r\n                                                                setIsSelected(false);\r\n                                                                setMethod('');\r\n                                                            }}\r\n                                                        >\r\n                                                            {t('action.back')}\r\n                                                        </button>\r\n                                                        <button\r\n                                                            className={`btn btn-primary px-8 capitalize font-normal py-4 rounded-2xl text-[19px] h-auto ${processing ? 'loading' : ''\r\n                                                                }`}\r\n                                                        >\r\n                                                            {t('action.continue')}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </GradientBorderWrapper>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </PageBanner>\r\n        </Page>\r\n    );\r\n}\r\n"],"names":["Page","forwardRef","_ref","ref","children","_ref$title","title","meta","other","_objectWithoutProperties","_excluded","_jsxs","_Fragment","Helmet","_jsx","concat","_objectSpread","propTypes","PropTypes","GradientBorderStyleWrapper","styled","_templateObject","_taggedTemplateLiteral","GradientBorderWrapper","props","className","isMessage","hoverEvent","onClick","Divider","_ref$cls","cls","style","height","PageBannerBackground","cover","PageBanner","Payment","t","useLocales","navigate","useNavigate","_useWebsocket","useWebsocket","received","cart","send","useSelector","store","_useState","useState","_useState2","_slicedToArray","method","setMethod","_useState3","_useState4","CVV","setCVV","_useState5","_useState6","CPF","setCPF","_useState7","_useState8","firstName","setFirstName","_useState9","_useState10","lastName","_useState11","_useState12","number","setNumber","_useState13","_useState14","validity","setValidity","_useState15","_useState16","installments","_useState17","_useState18","email","setEmail","_useState19","_useState20","isSelected","setIsSelected","_useState21","_useState22","processing","setProcessing","paymentOptions","label","value","onSubmit","e","length","preventDefault","card","pixData","ticketIds","map","item","_id","axios","API_TICKET","pix","then","res","_res$data","_res$data2","_res$data3","status","toast","data","message","finally","dispatch","setAvailableCart","getBack","useEffect","command","id","WEBSOCKET_CONSTATNT","filter","ticketId","tabIndex","option","Icon","icon","i","Link","width","viewBox","fill","xmlns","d","disabled","name","placeholder","onChange","target","required","type","maxLength","minLength"],"sourceRoot":""}