{"version":3,"file":"static/js/622.fa851380.chunk.js","mappings":"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","sources":["components/Page.js","components/wrappers/GradientBorderWrapper.js","components/wrappers/PageBanner.js","pages/profile/Notifications.js","utils/formatTime.js"],"sourcesContent":["import { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{`${title} | fanticket`}</title>\r\n            {meta}\r\n        </Helmet>\r\n\r\n        <div ref={ref} {...other}>\r\n            {children}\r\n        </div>\r\n    </>\r\n));\r\n\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node\r\n};\r\n\r\nexport default Page;\r\n","import styled from 'styled-components';\r\n\r\nconst GradientBorderStyleWrapper = styled.div`\r\n    border-radius: 16px;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    border: 1px;\r\n    border-style: solid;\r\n    border-color: transparent;\r\n\r\n    display: inline-flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    background: linear-gradient(#1c1c1c, #1c1c1c) padding-box, linear-gradient(to bottom, #828282, #323232) border-box;\r\n`;\r\n\r\nexport default function GradientBorderWrapper(props) {\r\n    return (\r\n        <GradientBorderStyleWrapper className={props?.className} >\r\n            <div\r\n                className={`w-full ${props?.isMessage && 'bg-primary/30'} rounded-xl ${props?.hoverEvent && 'hover:bg-primary/20'\r\n                    } `}\r\n                onClick={props?.onClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </GradientBorderStyleWrapper>\r\n    );\r\n}\r\n\r\nexport const Divider = ({ cls = '' }) => <div className={`divider overflow-hidden ${cls}`} style={{ height: 1 }} />;\r\n","import styled from 'styled-components';\r\n\r\nconst PageBannerBackground = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    position: relative;\r\n    &:before {\r\n        content: '';\r\n        background-image: linear-gradient(0deg, #1c1c1c 24.45%, rgba(28, 28, 28, 0) 84.89%),\r\n            ${(props) => props.cover || 'url(\"/images/background/main-banner-bg.jpg\")'};\r\n\r\n        z-index: -1;\r\n        position: absolute;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        -webkit-filter: grayscale(100%) blur(17.5px);\r\n        filter: grayscale(100%) blur(17.5px);\r\n        background-position: center;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport default function PageBanner(props) {\r\n    return (\r\n        <div className=\"w-full\">\r\n            <PageBannerBackground className=\"pt-40\">{props.children}</PageBannerBackground>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport { API_NOTIFICATION } from '../../config';\r\nimport axios from '../../utils/axios';\r\nimport useLocales from '../../hooks/useLocales';\r\nimport { dispatch, useSelector } from '../../redux/store';\r\nimport { loadUserNotifications } from '../../redux/slices/notification';\r\nimport { fToNow } from '../../utils/formatTime';\r\n\r\nimport Page from '../../components/Page';\r\nimport PageBanner from '../../components/wrappers/PageBanner';\r\nimport GradientBorderWrapper from '../../components/wrappers/GradientBorderWrapper';\r\n\r\nconst Notification = memo(({ notification, makeRead }) => {\r\n    const { t } = useLocales();\r\n\r\n    return (\r\n        <GradientBorderWrapper\r\n            className={`${notification.readed ? 'text-stone-400' : 'event-active-bg'}`}\r\n        >\r\n            <div>\r\n                <div\r\n                    className={`flex w-full justify-between items-start md:items-center flex-col md:flex-row pr-4`}\r\n                >\r\n                    <div className=\"flex gap-1 items-center p-4\">\r\n                        <div>\r\n                            <p>{notification?.content}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col items-end\">\r\n                        <div className=\"flex gap-2 items-center px-6 pb-4 md:p-0\">\r\n                            {notification.readed ? (\r\n                                <>\r\n                                    <p>{t('title.read')}</p>\r\n                                    <button className=\"btn btn-circle btn-outline btn-sm bg-secondary border-secondary text-primary\">\r\n                                        <Icon icon=\"iconamoon:check-bold\" />\r\n                                    </button>\r\n                                </>\r\n                            ) : (\r\n                                <p\r\n                                    className=\"text-primary underline\"\r\n                                    onClick={() => makeRead(notification._id)}\r\n                                >\r\n                                    {t('title.read_now')}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <p className=\"text-xs text-stone-400\" >{fToNow(notification.received)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </GradientBorderWrapper >\r\n    )\r\n})\r\n\r\nexport default function Notifications() {\r\n    const { t } = useLocales();\r\n    const { notifications } = useSelector((state) => state.notification);\r\n    const [size, setSize] = useState(1);\r\n    const makeRead = (id) => {\r\n        axios.put(`${API_NOTIFICATION.root}${id}`, { readed: true }).then((res) => {\r\n            if (res.status === 200) dispatch(loadUserNotifications());\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Page title=\"Notification\">\r\n            <PageBanner>\r\n                <div className=\"container mb-[104px] px-2\">\r\n                    <div className=\"flex gap-2 justify-start text-xl mb-8\">\r\n                        <Link to=\"/profile\">\r\n                            <span className=\"text-primary underline\">{t('title.menu.profile')}</span>\r\n                        </Link>\r\n                        <label>/</label>\r\n                        <label className=\"text-stone-400\">{t('title.menu.notification')}</label>\r\n                    </div>\r\n                    <div className=\"mb-8\">\r\n                        <label className=\"text-4xl md:text-[64px]\">{t('title.menu.notification')}</label>\r\n                        {!notifications?.length && <p className=\"text-stone-400 mt-4\">{t('description.notification')}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col py-4 gap-4\">\r\n                        {notifications?.slice(0, 10 * size).map((notification, index) => (\r\n                            <Notification key={index} notification={notification} makeRead={makeRead} />\r\n                        ))}\r\n                    </div>\r\n                    {notifications?.length > 10 * size && (<div className=\"flex justify-center\">\r\n                        <p onClick={() => setSize(size + 1)} className=\"text-primary underline capitalize cursor-pointer\">{t('action.show_more')}</p>\r\n                    </div>)}\r\n                </div>\r\n            </PageBanner>\r\n        </Page>\r\n    );\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\nexport function fDate(date) {\r\n    return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function displayEventTime(event) {\r\n    if (event.containsTime) {\r\n        return fDateTime(event.dateTime);\r\n    } else {\r\n        return fShortDate(event.dateTime);\r\n    }\r\n}\r\n\r\nexport function fShortDate(date) {\r\n    return format(new Date(date), 'dd MMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date) {\r\n    return format(new Date(date), 'dd MMM yyyy HH:mm');\r\n}\r\n\r\nexport function fTimestamp(date) {\r\n    return getTime(new Date(date));\r\n}\r\n\r\nexport function fDateTimeSuffix(date) {\r\n    return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date) {\r\n    try {\r\n        return formatDistanceToNow(new Date(date), {\r\n            addSuffix: true\r\n        });\r\n    } catch (err) {\r\n        return 'Invaild Date';\r\n    }\r\n}\r\nexport function fDescriptionTypeDate(date, isTime = true) {\r\n    try {\r\n        if (isTime) return format(new Date(date), 'EEEE dd, MMMM, yyyy p');\r\n        else return format(new Date(date), 'EEEE dd, MMMM, yyyy');\r\n    } catch (err) {\r\n        return `${date}`;\r\n    }\r\n}\r\n\r\nexport function fTypeDate(date) {\r\n    try {\r\n        return format(new Date(date), 'MMM, dd EEE');\r\n    } catch (err) {\r\n        return `${date}`;\r\n    }\r\n}\r\n"],"names":["Page","forwardRef","_ref","ref","children","_ref$title","title","meta","other","_objectWithoutProperties","_excluded","_jsxs","_Fragment","Helmet","_jsx","concat","_objectSpread","propTypes","PropTypes","GradientBorderStyleWrapper","styled","_templateObject","_taggedTemplateLiteral","GradientBorderWrapper","props","className","isMessage","hoverEvent","onClick","Divider","_ref$cls","cls","style","height","PageBannerBackground","cover","PageBanner","Notification","memo","notification","makeRead","t","useLocales","readed","content","Icon","icon","_id","fToNow","received","Notifications","notifications","useSelector","state","_useState","useState","_useState2","_slicedToArray","size","setSize","id","axios","API_NOTIFICATION","then","res","status","dispatch","loadUserNotifications","Link","to","length","slice","map","index","displayEventTime","event","containsTime","fDateTime","dateTime","fShortDate","date","format","Date","formatDistanceToNow","addSuffix","err","fDescriptionTypeDate","isTime","arguments","undefined","fTypeDate"],"sourceRoot":""}