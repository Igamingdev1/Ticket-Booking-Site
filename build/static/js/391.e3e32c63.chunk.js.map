{"version":3,"file":"static/js/391.e3e32c63.chunk.js","mappings":"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","sources":["components/Chip.js","components/Page.js","components/wrappers/GradientBorderWrapper.js","components/wrappers/PageBanner.js","components/cards/ChatChannelCard.js","pages/conversation/ConversationTickets.js","utils/formatNumber.js","utils/formatTime.js"],"sourcesContent":["import React from 'react';\r\nexport default function Chip({ label, color, className = \"\", ...other }) {\r\n    return (\r\n        <>\r\n            <div\r\n                className={`px-2 py-0.5 bg-${color} text-sm rounded-full ${className}`}\r\n                {...other}\r\n            >\r\n                <span>{label}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{`${title} | fanticket`}</title>\r\n            {meta}\r\n        </Helmet>\r\n\r\n        <div ref={ref} {...other}>\r\n            {children}\r\n        </div>\r\n    </>\r\n));\r\n\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node\r\n};\r\n\r\nexport default Page;\r\n","import styled from 'styled-components';\r\n\r\nconst GradientBorderStyleWrapper = styled.div`\r\n    border-radius: 16px;\r\n    width: 100%;\r\n    cursor: pointer;\r\n    border: 1px;\r\n    border-style: solid;\r\n    border-color: transparent;\r\n\r\n    display: inline-flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    background: linear-gradient(#1c1c1c, #1c1c1c) padding-box, linear-gradient(to bottom, #828282, #323232) border-box;\r\n`;\r\n\r\nexport default function GradientBorderWrapper(props) {\r\n    return (\r\n        <GradientBorderStyleWrapper className={props?.className} >\r\n            <div\r\n                className={`w-full ${props?.isMessage && 'bg-primary/30'} rounded-xl ${props?.hoverEvent && 'hover:bg-primary/20'\r\n                    } `}\r\n                onClick={props?.onClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </GradientBorderStyleWrapper>\r\n    );\r\n}\r\n\r\nexport const Divider = ({ cls = '' }) => <div className={`divider overflow-hidden ${cls}`} style={{ height: 1 }} />;\r\n","import styled from 'styled-components';\r\n\r\nconst PageBannerBackground = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    position: relative;\r\n    &:before {\r\n        content: '';\r\n        background-image: linear-gradient(0deg, #1c1c1c 24.45%, rgba(28, 28, 28, 0) 84.89%),\r\n            ${(props) => props.cover || 'url(\"/images/background/main-banner-bg.jpg\")'};\r\n\r\n        z-index: -1;\r\n        position: absolute;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        -webkit-filter: grayscale(100%) blur(17.5px);\r\n        filter: grayscale(100%) blur(17.5px);\r\n        background-position: center;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport default function PageBanner(props) {\r\n    return (\r\n        <div className=\"w-full\">\r\n            <PageBannerBackground className=\"pt-40\">{props.children}</PageBannerBackground>\r\n        </div>\r\n    );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { fNumber } from '../../utils/formatNumber';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nimport { fDescriptionTypeDate } from '../../utils/formatTime';\r\n\r\nimport useLocales from '../../hooks/useLocales';\r\n\r\nimport GradientBorderWrapper from '../wrappers/GradientBorderWrapper';\r\nimport Chip from '../Chip';\r\n\r\nexport default function ChatChannelCard({ channel, type = 'received', handleGoConversation }) {\r\n    const { t } = useLocales();\r\n    const { user } = useAuth();\r\n\r\n    const handleClick = () => {\r\n        if (type === 'received') {\r\n            handleGoConversation();\r\n        }\r\n    };\r\n\r\n    function getUnreadCount(chats) {\r\n        return chats.filter((c) => !c.readed && c.sender !== user?._id).length;\r\n    }\r\n    return (\r\n        <div className=\"w-full cursor-pointer\" onClick={handleClick}>\r\n            <GradientBorderWrapper hoverEvent={type === 'received'}>\r\n                <Chip label={channel?.dispute ? \"Dispute\" : \"Discuss Price\"} color={channel?.dispute ? \"red-500\" : \"warning\"} className=\"absolute right-3 top-3\" />\r\n\r\n                <div className=\"flex gap-2 justify-between p-6 items-center\">\r\n                    <div className=\"flex flex-col gap-1\">\r\n                        <h5 className=\"text-2xl\">{channel?.eventName}</h5>\r\n                        <p className=\"text-stone-400\">\r\n                            {channel?.eventType} - {channel?.count} {t('title.tickets')}\r\n                        </p>\r\n                        <p className=\"mt-3\" >{fDescriptionTypeDate(channel?.eventDate)}</p>\r\n                        {/*  price  */}\r\n                        {type === 'sent' && <h6>R$ {fNumber(channel?.buyerPrice)} - suggested</h6>}\r\n                    </div>\r\n                    <div>\r\n                        {type === 'received' && getUnreadCount(channel?.chats) !== 0 && (\r\n                            <div className=\"px-3 py-1 flex justify-center items-center text-primary underline\">\r\n                                {/* <Icon icon=\"system-uicons:ticket\" width={20} /> */}\r\n                                <p>{`${fNumber(getUnreadCount(channel?.chats))} ${t(\"description.unread_msg\")}`}</p>\r\n                            </div>\r\n                        )}\r\n                        {type === 'received' && channel?.chats.length !== 0 && getUnreadCount(channel?.chats) === 0 && (\r\n                            <div className=\"flex gap-2 items-center px-6 pb-4 md:p-0\">\r\n                                <p>{t('title.read')}</p>\r\n                                <button className=\"btn btn-circle btn-outline btn-sm bg-secondary border-secondary text-primary\">\r\n                                    <Icon icon=\"iconamoon:check-bold\" />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {type === 'sent' && (\r\n                            <button\r\n                                className=\"btn btn-sm btn-primary\"\r\n                                onClick={handleGoConversation}\r\n                                disabled={channel?.status !== 'open'}\r\n                            >\r\n                                {t('action.chat')}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </GradientBorderWrapper>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nimport { API_CHAT } from '../../config';\r\nimport axios from '../../utils/axios';\r\nimport useLocales from '../../hooks/useLocales';\r\n\r\nimport Page from '../../components/Page';\r\nimport PageBanner from '../../components/wrappers/PageBanner';\r\nimport ChatChannelCard from '../../components/cards/ChatChannelCard';\r\n\r\nexport default function CoversationTickets() {\r\n    const { t } = useLocales();\r\n    const [receiveChannels, setReceiveChannels] = useState([]);\r\n    const [sentChannels, setSentChannels] = useState([]);\r\n    const navigate = useNavigate();\r\n    const onGoConversation = (channel, type) => {\r\n        navigate(`/conversation/yard/${channel?.ticketId}/${type}`);\r\n    };\r\n    useEffect(() => {\r\n        axios.get(API_CHAT.getMyChannels).then((res) => {\r\n            if (res.status === 200) {\r\n                const received = [];\r\n                for (const channel of res.data?.data?.received || []) {\r\n                    const _channel = received.filter((c) => c.ticketId === channel.ticketId);\r\n                    if (_channel.length > 0 && channel.dispute === _channel[0].dispute) {\r\n                        _channel[0]?.users?.push(channel?.sender);\r\n                    } else {\r\n                        channel.users = [channel.sender];\r\n                        received.push(channel);\r\n                    }\r\n                }\r\n                setReceiveChannels(received);\r\n                setSentChannels(res.data?.data?.sent);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Page title=\"Ticket Conversation\">\r\n            <PageBanner>\r\n                <div className=\"container px-2 max-w-4xl\">\r\n                    <div className=\"flex gap-4 w-full mb-8\">\r\n                        <Link to=\"../\" className=\"text-primary cursor-pointer underline\">\r\n                            {t('title.menu.profile')}\r\n                        </Link>\r\n                        <div>/</div>\r\n                        <div className=\"grid grid-cols-2 text-stone-400\">\r\n                            <p>{t('title.menu.conversation')}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-4\">\r\n                        <h3 className=\"text-4xl md:text-[64px]\">{t('title.menu.conversation')}</h3>\r\n                        {!receiveChannels?.length && !sentChannels?.length && (\r\n                            <p className=\"text-stone-400 md:w-1/2\">{t('description.conversation')}</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </PageBanner>\r\n            <div className=\"container px-2 mt-12 w-full\">\r\n                {receiveChannels.length !== 0 && (\r\n                    <>\r\n                        <h5 className=\"text-2xl  mb-2\">{t('title.received_channel')}</h5>\r\n\r\n                        <div className=\"flex gap-4 mb-8 flex-wrap\">\r\n                            {receiveChannels?.map((channel, index) => (\r\n                                <div className=\"w-full\" key={index}>\r\n                                    <ChatChannelCard\r\n                                        channel={channel}\r\n                                        type=\"received\"\r\n                                        handleGoConversation={() => onGoConversation(channel, 'received')}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {sentChannels.length !== 0 && (\r\n                    <>\r\n                        <h5 className=\"text-2xl mb-2\">{t('title.sent_channel')}</h5>\r\n                        <div className=\"grid md:grid-cols-2 gap-6 mb-8 flex-wrap\">\r\n                            {sentChannels?.map((channel, index) => (\r\n                                <div className=\"w-full\" key={index}>\r\n                                    <ChatChannelCard\r\n                                        channel={channel}\r\n                                        type=\"sent\"\r\n                                        handleGoConversation={() => onGoConversation(channel, 'sent')}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Page >\r\n    );\r\n}\r\n","import numeral from 'numeral';\r\n\r\nexport function fCurrency(number) {\r\n    return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n    return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n    return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n    return numeral(number).format('0.00a').replace('.00', '');\r\n}\r\nexport function fData(number) {\r\n    return numeral(number).format('0.0 b');\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\nexport function fDate(date) {\r\n    return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function displayEventTime(event) {\r\n    if (event.containsTime) {\r\n        return fDateTime(event.dateTime);\r\n    } else {\r\n        return fShortDate(event.dateTime);\r\n    }\r\n}\r\n\r\nexport function fShortDate(date) {\r\n    return format(new Date(date), 'dd MMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date) {\r\n    return format(new Date(date), 'dd MMM yyyy HH:mm');\r\n}\r\n\r\nexport function fTimestamp(date) {\r\n    return getTime(new Date(date));\r\n}\r\n\r\nexport function fDateTimeSuffix(date) {\r\n    return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date) {\r\n    try {\r\n        return formatDistanceToNow(new Date(date), {\r\n            addSuffix: true\r\n        });\r\n    } catch (err) {\r\n        return 'Invaild Date';\r\n    }\r\n}\r\nexport function fDescriptionTypeDate(date, isTime = true) {\r\n    try {\r\n        if (isTime) return format(new Date(date), 'EEEE dd, MMMM, yyyy p');\r\n        else return format(new Date(date), 'EEEE dd, MMMM, yyyy');\r\n    } catch (err) {\r\n        return `${date}`;\r\n    }\r\n}\r\n\r\nexport function fTypeDate(date) {\r\n    try {\r\n        return format(new Date(date), 'MMM, dd EEE');\r\n    } catch (err) {\r\n        return `${date}`;\r\n    }\r\n}\r\n"],"names":["Chip","_ref","label","color","_ref$className","className","other","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","_objectSpread","concat","Page","forwardRef","ref","_ref$title","title","meta","_jsxs","Helmet","propTypes","PropTypes","GradientBorderStyleWrapper","styled","_templateObject","_taggedTemplateLiteral","GradientBorderWrapper","props","isMessage","hoverEvent","onClick","Divider","_ref$cls","cls","style","height","PageBannerBackground","cover","PageBanner","ChatChannelCard","channel","_ref$type","type","handleGoConversation","t","useLocales","user","useAuth","getUnreadCount","chats","filter","c","readed","sender","_id","length","dispute","eventName","eventType","count","fDescriptionTypeDate","eventDate","fNumber","buyerPrice","Icon","icon","disabled","status","CoversationTickets","_useState","useState","_useState2","_slicedToArray","receiveChannels","setReceiveChannels","_useState3","_useState4","sentChannels","setSentChannels","navigate","useNavigate","onGoConversation","ticketId","useEffect","axios","API_CHAT","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_step","received","_iterator","_createForOfIteratorHelper","data","_loop","_channel$","_channel$$users","value","_channel","users","push","s","n","done","err","e","f","sent","Link","to","map","index","fCurrency","number","numeral","format","Number","isInteger","fShortenNumber","replace","displayEventTime","event","containsTime","fDateTime","dateTime","fShortDate","date","Date","fToNow","formatDistanceToNow","addSuffix","isTime","arguments","undefined","fTypeDate"],"sourceRoot":""}